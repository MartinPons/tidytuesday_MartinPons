View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
kiss_graph <- create_xmen_graph(characters, "kiss_with_which_character")
# helpler function for tbl_graph object cration
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(str_remove(to, "\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(str_remove(to, "\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
# helpler function for tbl_graph object cration
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(str_remove(to, "\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
?str_remove
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(to = str_remove(to, "\\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
kiss_graph <- create_xmen_graph(characters, "kiss_with_which_character")
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(to = str_remove(to, "\\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
kiss_graph <- create_xmen_graph(characters, "kiss_with_which_character")
set.seed(123)
kiss_graph %>%
ggraph(layout = "fr") +
geom_edge_link() +
geom_node_point(size = 8, color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = T, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
kiss_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(size = 8, color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = T, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
kiss_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = T, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
set.seed(123)
kiss_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
conflict_graph <- create_xmen_graph(characters, "initiates_physical_conflict")
conflict_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
set.seed(123)
conflict_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
create_xmen_graph <- function(dat, variable) {
dat <- dat[, c("character", variable)]
dat <- setNames(dat, c("from", "to"))
# separate rows by comma
dat <- dat %>%
separate_rows(to, sep = ", ")
# removing missing
dat <- dat %>%
filter(!is.na(to))
# cleaning to names
dat <- dat %>%
mutate(to = str_remove(to, "\\*{1,4}"))
# weight
dat <- dat %>%
count(from, to)
View(dat)
# creation of net
nodes <- unique(c(dat$from, dat$to))
char_graph <- tbl_graph(edges = dat,
node_key = "character",
nodes = data.frame(character = nodes))
char_graph <- char_graph %>%
mutate(degree = centrality_degree(weights = n),
betweenness = centrality_betweenness(weights = n))
char_graph
}
conflict_graph <- create_xmen_graph(characters, "initiates_physical_conflict")
kiss_graph <- create_xmen_graph(characters, "kiss_with_which_character")
date_graph <- create_xmen_graph(characters, "on_a_date_with_which_character")
date_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
fly_graph <- create_xmen_graph(characters, "flying_with_another_character")
date_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = betweenness), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
date_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
pyshical_graph <- create_xmen_graph(characters, "physical_contact_other")
set.seed(123)
pyshical_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
pyshical_graph %>%
ggraph(layout = "linear", circular = T) +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
pyshical_graph %>%
activate(edges) %>%
filter(n > 5) %>%
ggraph(layout = "linear", circular = T) +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
pyshical_graph %>%
activate(edges) %>%
filter(n > 7) %>%
ggraph(layout = "linear", circular = T) +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
pyshical_graph %>%
activate(edges) %>%
filter(n > 7) %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
love_graph <- create_xmen_graph(characters, "explicitly_states_i_love_you_to_whom")
love_graph %>%
ggraph(layout = "fr") +
geom_edge_link(aes(alpha = n / max(n))) +
geom_node_point(aes(size = degree), color = "black", pch = 21, fill = "#056DB6") +
geom_node_text(aes(label = character), repel = F, family = "Agency FB",
color = "black", vjust = 2, size = 5) +
theme_graph()
View(character)
View(characters)
characters %>% count(character)
characters %>% count(character) %>% View(9)
characters %>% count(character) %>% View()
unique(characters$special_notes)
source('C:/Users/marti/Desktop/tidytuesday/5. Uncanny X-men/characters_EDA.R', echo=TRUE)
characters %>%
filter(character == "Wolverine")
?across
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(.cols = number_of_kills_humans, number_of_kills_non_humans),
sum,
names = "{col}")
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(.cols = number_of_kills_humans, number_of_kills_non_humans),
.fns = "sum",
names = "{col}")
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(number_of_kills_humans, number_of_kills_non_humans),
sum)
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
sum))
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
sum))
characters %>%
filter(character == "Wolverine") %>%
group_by(issue) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
sum)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans)
characters %>%
#  filter(character == "Wolverine") %>%
group_by(character == "wolverine", issue) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character == "wolverine") %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean))
?fct_recode
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = character == "wolverine") %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = character == "wolverine") %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(Wolverine = TRUE, Other = FALSE))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = character == "wolverine") %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(character, Wolverine = TRUE, Other = FALSE))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = character == "wolverine" * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(character, Wolverine = 1, Other = 0))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = 1, Other = 0))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0"))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, kills)) +
geom_line(aes(group = character, color = "character")) +
geom_point(aes(color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, kills)) +
geom_line(aes(group = character, color = character)) +
geom_point(aes(color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
View()
summary(characters$number_of_kills_non_humansç)
summary(characters$number_of_kills_non_humans)
summary(characters$number_of_kills_humans)
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>% View()
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0"))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, number_of_kills_humans)) +
geom_line(aes(group = character, color = character)) +
geom_point(aes(color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
cumul_human_kills = cumsum(number_of_kills_humans),
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, cumul_human_kills)) +
geom_line(aes(group = character, color = character)) +
geom_point(aes(color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
group_by(character) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
cumul_human_kills = cumsum(number_of_kills_humans),
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, cumul_human_kills)) +
geom_line(aes(group = character, color = character)) +
geom_point(aes(color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
group_by(character) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
cumul_human_kills = cumsum(number_of_kills_humans),
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, cumul_human_kills)) +
geom_step(aes(group = character, color = character))
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
sum)) %>%
group_by(character) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
cumul_human_kills = cumsum(number_of_kills_humans),
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, cumul_human_kills)) +
geom_step(aes(group = character, color = character))
characters %>%
ggplot(aes(number_of_kills_non_humans)) +
geom_histogram()
characters %>%
#  filter(character == "Wolverine") %>%
group_by(issue, character = (character == "Wolverine") * 1) %>%
summarise(across(c(number_of_kills_humans, number_of_kills_non_humans),
mean)) %>%
group_by(character) %>%
mutate(kills = number_of_kills_humans + number_of_kills_non_humans,
cumul_human_kills = cumsum(number_of_kills_humans),
character = fct_recode(as.character(character), Wolverine = "1", Other = "0")) %>%
ggplot(aes(issue, cumul_human_kills)) +
geom_step(aes(group = character, color = character))
library(lubridate)
?parse_date_time
